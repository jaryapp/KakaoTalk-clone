{"version":3,"sources":["elements/BallonNotification/BallonNotification.tsx","components/WindowManagement/WindowManagement.tsx","components/Navigation/Naviagtion.tsx","components/Search/Search.tsx","components/PreviewCard/Thumbnail/Thumbnail.tsx","components/PreviewCard/ThumbnailGroup/ThumbnailGroup.tsx","components/PreviewCard/UserCardItem/UserCardItem.tsx","components/PreviewCard/UserCardItem/index.ts","components/PreviewCard/UserGroupCardItem/UserGroupCardItem.tsx","components/PreviewCard/UserGroupCardItem/index.ts","components/PreviewCard/UserCardList/UserCardList.tsx","components/PreviewCard/UserCardList/index.ts","components/PreviewCard/UserCardGroup/UserCardGroup.tsx","components/Friend/Friend.tsx","components/ChatRooms/ChatRooms.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["StyledBallonNotification","styled","div","BallonNotification","children","label","className","StyledWindowManagement","ul","WindowManagement","StyledNavigation","nav","Navigation","useState","activeId","setActiveId","history","useHistory","navList","id","icon","link","map","classNames","onClick","match","find","push","ThumbnailSize","StyledSearch","Search","placeholder","isFocus","setIsFocus","type","onFocus","onBlur","ThumbnailCount","StyledThumbnail","figure","props","url","size","PreviewCardThumbnail","figurePostion","1","child1","top","left","2","child2","bottom","right","3","child3","4","child4","StyledPreviewCardThumbnailGroup","count","Name","groupProfileUrl","length","profile","idx","Thumbnail","StyledUserCardItem","UserCardItem","username","stateMsg","song","profileUrl","UserGroupCardItem","groupname","ThumbnailGroup","StyledUserCardList","UserCardList","cardList","card","undefined","isIUserCardItem","StyledUserCardGroup","UserCardGroup","cardGroupName","StyledFriend","Friend","MyProfileMocks","BirthDayFriendsMocks","FavoritesMocks","ChannelMocks","FriendsMocks","ChatRooms","Container","section","MainPage","exact","path","component","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a1efd20.chunk.js","sourcesContent":["/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBallonNotification = styled.div`\r\n  position: relative;\r\n  // 초점맞추기\r\n  .point {\r\n    position: absolute;\r\n    width: 30px;\r\n    min-height: 10px;\r\n    top: -8px;\r\n    right: -11px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .label {\r\n    font-size: 0.7rem;\r\n    background-color: #ed6754;\r\n    border-radius: 10px;\r\n    padding: 0.3em 0.5em;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  label: string;\r\n}\r\n\r\nconst BallonNotification: React.FC<Props> = ({ children, label }) => {\r\n  return (\r\n    <StyledBallonNotification>\r\n      {/* <div className=\"label\">{label}</div> */}\r\n      <div className=\"point\">\r\n        <div className=\"label\">{label}</div>\r\n      </div>\r\n      {children}\r\n    </StyledBallonNotification>\r\n  );\r\n};\r\n\r\nexport default BallonNotification;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FiX, FiMaximize2, FiMinimize2 } from 'react-icons/fi';\r\n\r\n/* Internal dependencies */\r\n\r\nconst StyledWindowManagement = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0 4px;\r\n  li {\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n    background-color: #7f7976;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 0.5rem;\r\n    color: transparent;\r\n\r\n    &.close {\r\n      background-color: #ff5f58;\r\n    }\r\n    &.down {\r\n      background-color: #febf2f;\r\n    }\r\n    &.extend {\r\n      background-color: #2bcc41;\r\n    }\r\n  }\r\n  &:hover {\r\n    li {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WindowManagement: React.FC = () => {\r\n  return (\r\n    <StyledWindowManagement>\r\n      <li className=\"close\">\r\n        <FiX />\r\n      </li>\r\n      <li className=\"down\">\r\n        <FiMinimize2 />\r\n      </li>\r\n      <li className=\"extend\">\r\n        <FiMaximize2 />\r\n      </li>\r\n    </StyledWindowManagement>\r\n  );\r\n};\r\n\r\nexport default WindowManagement;\r\n","/* External dependencies */\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport { BsPersonFill, BsFillGearFill } from 'react-icons/bs';\r\nimport { ImBubble } from 'react-icons/im';\r\nimport { FiMoreHorizontal } from 'react-icons/fi';\r\nimport { AiFillBell } from 'react-icons/ai';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/* Internal dependencies */\r\nimport BallonNotification from '@elements/BallonNotification';\r\nimport WindowManagement from '@components/WindowManagement';\r\n\r\nconst StyledNavigation = styled.nav`\r\n  background-color: #423630;\r\n  height: 100%;\r\n  padding-top: 8px;\r\n  .menu {\r\n    height: 100%;\r\n    padding: 32px 0 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    li {\r\n      color: #8d8683;\r\n      margin-bottom: 1em;\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: #bdb4af;\r\n      }\r\n      &.person {\r\n        font-size: 1.8rem;\r\n      }\r\n      &.bubble {\r\n        font-size: 1.3rem;\r\n      }\r\n      &.more {\r\n        font-size: 1.6rem;\r\n      }\r\n      &.bell {\r\n        font-size: 1.1rem;\r\n      }\r\n      &.gear {\r\n        font-size: 1.1rem;\r\n      }\r\n      &.active {\r\n        color: white;\r\n      }\r\n    }\r\n    li:nth-child(4) {\r\n      margin-top: auto;\r\n    }\r\n    li:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navigation: React.FC = () => {\r\n  const [activeId, setActiveId] = useState<number>(1);\r\n  const history = useHistory();\r\n  const navList = [\r\n    {\r\n      id: 1,\r\n      className: 'person',\r\n      icon: <BsPersonFill />,\r\n      link: '/',\r\n    },\r\n    {\r\n      id: 2,\r\n      className: 'bubble',\r\n      icon: <ImBubble />,\r\n      label: '999+',\r\n      link: '/chat',\r\n    },\r\n    {\r\n      id: 3,\r\n      className: 'more',\r\n      icon: <FiMoreHorizontal />,\r\n      label: 'N',\r\n      link: '/more',\r\n    },\r\n    {\r\n      id: 4,\r\n      className: 'bell',\r\n      icon: <AiFillBell />,\r\n    },\r\n    {\r\n      id: 5,\r\n      className: 'gear',\r\n      icon: <BsFillGearFill />,\r\n    },\r\n  ];\r\n\r\n  const onClick = (id: number) => {\r\n    setActiveId(id);\r\n    const match = navList.find(nav => nav.id === id);\r\n    if (match?.link) history.push(match.link);\r\n  };\r\n\r\n  return (\r\n    <StyledNavigation>\r\n      <WindowManagement />\r\n      <ul className=\"menu\">\r\n        {navList.map(nav => {\r\n          return (\r\n            <li\r\n              key={nav.id}\r\n              className={classNames(\r\n                nav.className,\r\n                activeId === nav.id && 'active',\r\n              )}\r\n              onClick={() => onClick(nav.id)}\r\n            >\r\n              {nav.label ? (\r\n                <BallonNotification label={nav.label}>\r\n                  {nav.icon}\r\n                </BallonNotification>\r\n              ) : (\r\n                nav.icon\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </StyledNavigation>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","/* External dependencies */\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\n/* Internal dependencies */\r\n\r\nconst StyledSearch = styled.div`\r\n  background: #f7f7f7;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 22px;\r\n  box-sizing: border-box;\r\n  border: solid 2px transparent;\r\n  border-radius: 3px;\r\n  &.focus {\r\n    border: solid 2px #8ab4fa;\r\n  }\r\n  input {\r\n    flex-grow: 1;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n  input::placeholder {\r\n    color: #b9b9b9;\r\n  }\r\n  .icon {\r\n    margin: 0px 5px;\r\n    margin-bottom: -5px;\r\n  }\r\n`;\r\n\r\ninterface SearchParams {\r\n  placeholder?: string;\r\n}\r\n\r\nconst Search: React.FC<SearchParams> = ({ placeholder }) => {\r\n  const [isFocus, setIsFocus] = useState<boolean>(false);\r\n\r\n  const onFocusInput = () => {\r\n    setIsFocus(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setIsFocus(false);\r\n  };\r\n\r\n  return (\r\n    <StyledSearch className={classNames(isFocus && 'focus')}>\r\n      <figure className=\"icon\">\r\n        <AiOutlineSearch />\r\n      </figure>\r\n      <input\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onFocus={onFocusInput}\r\n        onBlur={onBlur}\r\n      />\r\n    </StyledSearch>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* Internal dependencies */\r\n\r\nexport enum ThumbnailSize {\r\n  lg = 'lg',\r\n  md = 'md',\r\n}\r\n\r\nexport interface IThumbnail {\r\n  url: string;\r\n  size?: string;\r\n}\r\n\r\nconst StyledThumbnail = styled.figure<IThumbnail>`\r\n  display: inline-block;\r\n  background-image: url('${props => props.url}');\r\n  background-size: cover;\r\n  min-width: ${props => (props.size === 'lg' ? '50px' : '40px')};\r\n  min-height: ${props => (props.size === 'lg' ? '50px' : '40px')};\r\n  border-radius: 40%;\r\n`;\r\n\r\nconst PreviewCardThumbnail: React.FC<IThumbnail> = props => {\r\n  return <StyledThumbnail {...props} className=\"thumbnail\"></StyledThumbnail>;\r\n};\r\n\r\nexport default PreviewCardThumbnail;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* Internal dependencies */\r\nimport { Thumbnail } from '@components/PreviewCard';\r\nimport { IThumbnail } from '@components/PreviewCard/Thumbnail/Thumbnail';\r\n\r\nexport enum ThumbnailCount {\r\n  One = 1,\r\n  Two = 2,\r\n  Three = 3,\r\n  Four = 4,\r\n}\r\n\r\ninterface Props {\r\n  groupProfileUrl: IThumbnail[];\r\n}\r\n\r\nconst figurePostion: any = {\r\n  1: {\r\n    size: '100%',\r\n    child1: { top: '0px', left: '0px' },\r\n  },\r\n  2: {\r\n    size: '70%',\r\n    child1: { top: '0px', left: '0px' },\r\n    child2: { bottom: '0px', right: '0px' },\r\n  },\r\n  3: {\r\n    size: '60%',\r\n    child1: { bottom: '0px', left: '0px' },\r\n    child2: { bottom: '0px', right: '0px' },\r\n    child3: { top: '0px', left: '17.5%' },\r\n  },\r\n  4: {\r\n    size: '50%',\r\n    child1: { top: '0px', left: '0px' },\r\n    child2: { top: '0px', right: '0px' },\r\n    child3: { bottom: '0px', left: '0px' },\r\n    child4: { bottom: '0px', right: '0px' },\r\n  },\r\n};\r\n\r\nconst StyledPreviewCardThumbnailGroup = styled.div<{ count: number }>`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  figure {\r\n    position: absolute;\r\n    min-width: ${props => figurePostion[props.count].size};\r\n    min-height: ${props => figurePostion[props.count].size};\r\n    border: 1px solid white;\r\n  }\r\n  figure:nth-child(1) {\r\n    left: ${props => figurePostion[props.count].child1?.left};\r\n    right: ${props => figurePostion[props.count].child1?.right};\r\n    top: ${props => figurePostion[props.count].child1?.top};\r\n    bottom: ${props => figurePostion[props.count].child1?.bottom};\r\n    z-index: 1;\r\n  }\r\n  figure:nth-child(2) {\r\n    left: ${props => figurePostion[props.count].child2?.left};\r\n    right: ${props => figurePostion[props.count].child2?.right};\r\n    top: ${props => figurePostion[props.count].child2?.top};\r\n    bottom: ${props => figurePostion[props.count].child2?.bottom};\r\n    z-index: 2;\r\n  }\r\n  figure:nth-child(3) {\r\n    left: ${props => figurePostion[props.count].child3?.left};\r\n    right: ${props => figurePostion[props.count].child3?.right};\r\n    top: ${props => figurePostion[props.count].child3?.top};\r\n    bottom: ${props => figurePostion[props.count].child3?.bottom};\r\n    z-index: 3;\r\n  }\r\n  figure:nth-child(4) {\r\n    left: ${props => figurePostion[props.count].child4?.left};\r\n    right: ${props => figurePostion[props.count].child4?.right};\r\n    top: ${props => figurePostion[props.count].child4?.top};\r\n    bottom: ${props => figurePostion[props.count].child4?.bottom};\r\n    z-index: 4;\r\n  }\r\n`;\r\n\r\nconst Name: React.FC<Props> = ({ groupProfileUrl }) => {\r\n  function makeMocks() {\r\n    return groupProfileUrl.map((profile, idx) => (\r\n      // 임시키\r\n      <Thumbnail key={idx} {...profile} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <StyledPreviewCardThumbnailGroup\r\n      className=\"thumbnail-group\"\r\n      count={groupProfileUrl.length}\r\n    >\r\n      {makeMocks()}\r\n    </StyledPreviewCardThumbnailGroup>\r\n  );\r\n};\r\n\r\nexport default Name;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsPlay } from 'react-icons/bs';\r\n\r\n/* Internal dependencies */\r\nimport { Thumbnail } from '@components/PreviewCard';\r\nimport { IThumbnail } from '@components/PreviewCard/Thumbnail/Thumbnail';\r\n\r\nexport interface IUserCardItem {\r\n  id: number;\r\n  username: string;\r\n  stateMsg?: string;\r\n  size?: 'lg' | 'md';\r\n  song?: string;\r\n  profileUrl: IThumbnail;\r\n}\r\n\r\nconst StyledUserCardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 7px 0px;\r\n  .contents {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-left: 8px;\r\n    font-size: 0.8rem;\r\n\r\n    & > .info {\r\n      .title {\r\n        color: #222;\r\n        font-weight: 600;\r\n      }\r\n      .description {\r\n        margin-top: 6px;\r\n        color: gray;\r\n        font-size: 0.9em;\r\n      }\r\n    }\r\n\r\n    .song {\r\n      max-width: 150px;\r\n      align-self: center;\r\n      margin-left: auto;\r\n      border: 1px solid #03cd3b;\r\n      border-radius: 10px;\r\n      padding: 4px 7px;\r\n      display: flex;\r\n\r\n      .info {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        width: 90%;\r\n        font-size: 0.4rem;\r\n        color: #525252;\r\n      }\r\n      .play {\r\n        align-self: center;\r\n        color: #03cd3b;\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n  }\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.034);\r\n  }\r\n`;\r\n\r\nconst UserCardItem: React.FC<IUserCardItem> = ({\r\n  username,\r\n  stateMsg,\r\n  song,\r\n  profileUrl,\r\n}) => {\r\n  return (\r\n    <StyledUserCardItem className=\"user-card\">\r\n      <Thumbnail {...profileUrl} />\r\n      <div className=\"contents\">\r\n        <div className=\"info\">\r\n          <div className=\"title\">{username}</div>\r\n          <div className=\"description\">{stateMsg}</div>\r\n        </div>\r\n        {song && (\r\n          <div className=\"song\">\r\n            <div className=\"info\">{song}</div>\r\n            <BsPlay className=\"play\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </StyledUserCardItem>\r\n  );\r\n};\r\n\r\nexport default UserCardItem;\r\n","import UserCardItem, { IUserCardItem } from './UserCardItem';\r\n\r\nexport default UserCardItem;\r\nexport type { IUserCardItem };\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* Internal dependencies */\r\nimport { ThumbnailGroup } from '@components/PreviewCard';\r\nimport { IThumbnail } from '@components/PreviewCard/Thumbnail/Thumbnail';\r\n\r\nexport interface IUserGroupCardItem {\r\n  id: number;\r\n  groupname: string;\r\n  groupProfileUrl: IThumbnail[];\r\n}\r\n\r\nconst StyledUserCardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 7px 0px;\r\n  .contents {\r\n    display: flex;\r\n    margin-left: 8px;\r\n    font-size: 0.8rem;\r\n    align-content: center;\r\n    .title {\r\n      color: #222;\r\n      font-weight: 600;\r\n    }\r\n    .description {\r\n      margin-top: 6px;\r\n      color: gray;\r\n      font-size: 0.9em;\r\n    }\r\n    .people-count {\r\n      margin-left: 6px;\r\n      font-weight: bold;\r\n      color: #b3b3b3;\r\n      font-size: 1.1em;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.034);\r\n  }\r\n`;\r\n\r\nconst UserCardItem: React.FC<IUserGroupCardItem> = ({\r\n  groupname,\r\n  groupProfileUrl,\r\n}) => {\r\n  return (\r\n    <StyledUserCardItem className=\"user-group-card\">\r\n      <ThumbnailGroup groupProfileUrl={groupProfileUrl} />\r\n      <div className=\"contents\">\r\n        <div className=\"title\">{groupname}</div>\r\n        <div className=\"people-count\">{groupProfileUrl.length}</div>\r\n      </div>\r\n    </StyledUserCardItem>\r\n  );\r\n};\r\n\r\nexport default UserCardItem;\r\n","import UserGroupCardItem, { IUserGroupCardItem } from './UserGroupCardItem';\r\n\r\nexport default UserGroupCardItem;\r\nexport type { IUserGroupCardItem };\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* Internal dependencies */\r\nimport {\r\n  UserCardItem,\r\n  IUserCardItem,\r\n  IUserGroupCardItem,\r\n  UserGroupCardItem,\r\n} from '@components/PreviewCard';\r\n\r\nexport type cardItem = IUserCardItem | IUserGroupCardItem;\r\n\r\nexport interface IUserCardList {\r\n  cardList: cardItem[];\r\n}\r\n\r\nconst StyledUserCardList = styled.div`\r\n  /* display: flex; */\r\n  align-items: center;\r\n  padding: 7px 0px;\r\n  .contents {\r\n    margin-left: 8px;\r\n    font-size: 0.8rem;\r\n    .title {\r\n      font-weight: 600;\r\n    }\r\n    .description {\r\n      margin-top: 6px;\r\n      color: gray;\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PreviewCardItem: React.FC<IUserCardList> = ({ cardList }) => {\r\n  function isIUserCardItem(\r\n    card: IUserCardItem | IUserGroupCardItem,\r\n  ): card is IUserCardItem {\r\n    return (card as IUserCardItem).username !== undefined;\r\n  }\r\n\r\n  return (\r\n    <StyledUserCardList>\r\n      {cardList.map(card =>\r\n        isIUserCardItem(card) ? (\r\n          <UserCardItem key={card.id} {...card} />\r\n        ) : (\r\n          <UserGroupCardItem key={card.id} {...card} />\r\n        ),\r\n      )}\r\n    </StyledUserCardList>\r\n  );\r\n};\r\n\r\nexport default PreviewCardItem;\r\n","import UserCardList, { IUserCardList } from './UserCardList';\r\n\r\nexport default UserCardList;\r\nexport type { IUserCardList };\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/* Internal dependencies */\r\nimport { UserCardList, IUserCardList } from '@components/PreviewCard';\r\n\r\nconst StyledUserCardGroup = styled.div`\r\n  .line {\r\n    height: 1px;\r\n    background: #f1f1f1;\r\n    margin-bottom: 10px;\r\n    margin-top: 6px;\r\n  }\r\n  .group-name {\r\n    font-size: 0.71rem;\r\n    color: #ababab;\r\n  }\r\n`;\r\n\r\ninterface IUserCardGroup extends IUserCardList {\r\n  cardGroupName: string;\r\n}\r\n\r\nconst UserCardGroup: React.FC<IUserCardGroup> = ({\r\n  cardGroupName,\r\n  cardList,\r\n}) => {\r\n  return (\r\n    <StyledUserCardGroup>\r\n      <p className=\"group-name\">{cardGroupName}</p>\r\n      <UserCardList cardList={cardList} />\r\n      <div className=\"line\" />\r\n    </StyledUserCardGroup>\r\n  );\r\n};\r\n\r\nexport default UserCardGroup;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsPersonPlusFill } from 'react-icons/bs';\r\n\r\n/* Internal dependencies */\r\nimport Search from '@components/Search';\r\nimport { UserCardGroup } from '@components/PreviewCard';\r\nimport {\r\n  MyProfileMocks,\r\n  BirthDayFriendsMocks,\r\n  ChannelMocks,\r\n  FavoritesMocks,\r\n  FriendsMocks,\r\n} from '~/src/__mocks__/CardList';\r\n\r\nconst StyledFriend = styled.div`\r\n  height: 100%;\r\n\r\n  header {\r\n    color: #404040;\r\n    height: 40px;\r\n    display: flex;\r\n    font-weight: bold;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: calc(100% - 34px);\r\n    margin: 0 auto;\r\n\r\n    .icon {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n  .people {\r\n    padding: 10px 0px;\r\n    height: calc(100vh - 72px);\r\n    overflow-y: auto;\r\n    ::-webkit-scrollbar {\r\n      width: 14px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background-color: #fff;\r\n      border: solid 30px transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      height: 6px;\r\n      border: 3px solid rgba(0, 0, 0, 0);\r\n      background-clip: padding-box;\r\n      border-radius: 10px;\r\n      background-color: rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n      background-color: #838383;\r\n    }\r\n\r\n    .line,\r\n    .group-name,\r\n    .user-card,\r\n    .user-group-card {\r\n      padding-left: 17px;\r\n      padding-right: 17px;\r\n    }\r\n  }\r\n  & > div {\r\n    width: calc(100% - 34px);\r\n    margin: 0 auto;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Friend: React.FC = () => {\r\n  return (\r\n    <StyledFriend>\r\n      <header>\r\n        <span>친구</span>\r\n        <BsPersonPlusFill className=\"icon\" />\r\n      </header>\r\n      <Search placeholder=\"이름으로 검색\"/>\r\n      <article className=\"people\">\r\n        <UserCardGroup\r\n          cardGroupName={'내 기본 프로필'}\r\n          cardList={[MyProfileMocks]}\r\n        ></UserCardGroup>\r\n        <UserCardGroup\r\n          cardGroupName={'생일인 친구'}\r\n          cardList={BirthDayFriendsMocks}\r\n        ></UserCardGroup>\r\n        <UserCardGroup\r\n          cardGroupName={'즐겨찾기'}\r\n          cardList={FavoritesMocks}\r\n        ></UserCardGroup>\r\n        <UserCardGroup\r\n          cardGroupName={'채널'}\r\n          cardList={ChannelMocks}\r\n        ></UserCardGroup>\r\n        <UserCardGroup\r\n          cardGroupName={'친구'}\r\n          cardList={FriendsMocks}\r\n        ></UserCardGroup>\r\n      </article>\r\n    </StyledFriend>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BsPersonPlusFill } from 'react-icons/bs';\r\n\r\n/* Internal dependencies */\r\nimport Search from '@components/Search';\r\nimport { UserCardList } from '@components/PreviewCard';\r\nimport { ChatRooms } from '~/src/__mocks__/CardList';\r\n\r\nconst StyledFriend = styled.div`\r\n  height: 100%;\r\n\r\n  header {\r\n    color: #404040;\r\n    height: 40px;\r\n    display: flex;\r\n    font-weight: bold;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: calc(100% - 34px);\r\n    margin: 0 auto;\r\n\r\n    .icon {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n  .people {\r\n    padding: 10px 0px;\r\n    height: calc(100vh - 72px);\r\n    overflow-y: auto;\r\n    ::-webkit-scrollbar {\r\n      width: 14px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background-color: #fff;\r\n      border: solid 30px transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      height: 6px;\r\n      border: 3px solid rgba(0, 0, 0, 0);\r\n      background-clip: padding-box;\r\n      border-radius: 10px;\r\n      background-color: rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n      background-color: #838383;\r\n    }\r\n\r\n    .line,\r\n    .group-name,\r\n    .user-card,\r\n    .user-group-card {\r\n      padding-left: 17px;\r\n      padding-right: 17px;\r\n    }\r\n  }\r\n  & > div {\r\n    width: calc(100% - 34px);\r\n    margin: 0 auto;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst Friend: React.FC = () => {\r\n  return (\r\n    <StyledFriend>\r\n      <header>\r\n        <span>채팅</span>\r\n        <BsPersonPlusFill className=\"icon\" />\r\n      </header>\r\n      <Search placeholder=\"채팅방 이름, 참여자 검색\" />\r\n      <article className=\"people\">\r\n        <UserCardList cardList={ChatRooms} />\r\n      </article>\r\n    </StyledFriend>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route } from 'react-router-dom';\r\n\r\n/* Internal dependencies */\r\nimport Navigation from '@components/Navigation';\r\nimport Friend from '@components/Friend';\r\nimport ChatRooms from '@components/ChatRooms';\r\n\r\nconst Container = styled.section`\r\n  display: flex;\r\n  min-height: 100vh;\r\n  & > aside {\r\n    width: 70px;\r\n  }\r\n  & > main {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <aside>\r\n        <Navigation />\r\n      </aside>\r\n      <main>\r\n        <Route exact path=\"/\" component={Friend} />\r\n        <Route exact path=\"/chat\" component={ChatRooms} />\r\n      </main>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","/* External dependencies */\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n/* Internal dependencies */\r\nimport MainPage from '@pages/MainPage';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Route path=\"/\" component={MainPage} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}